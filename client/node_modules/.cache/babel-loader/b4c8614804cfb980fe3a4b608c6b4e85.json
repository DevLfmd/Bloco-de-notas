{"ast":null,"code":"var _jsxFileName = \"/home/luizfmd/\\xC1rea de Trabalho/bloco-notas/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useAxios } from './hooks/useAxios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nexport default function App() {\n  _s();\n\n  const {\n    axios\n  } = useAxios();\n  const initialState = {\n    _id: 0,\n    subject: '',\n    text: ''\n  };\n  const [notes, setNotes] = React.useState([]);\n  const [note, setNote] = React.useState(initialState);\n  /**\n   * Envia dados para o backend\n   */\n\n  const onSubmit = async () => {\n    await axios.post('/notas/criar', {\n      note\n    });\n    setNote(initialState);\n  };\n  /**\n   * Exclui uma nota\n   */\n\n\n  const onDestroy = async _id => {\n    await axios.delete(`/notas/excluir/${_id}`);\n    setNotes(notes === null || notes === void 0 ? void 0 : notes.filter(item => item._id !== _id));\n  };\n\n  React.useEffect(() => {\n    (async () => await axios.get('/notas').then(res => setNotes(res.data.notes)))();\n  }, [axios]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#93469c'\n        },\n        children: \" Bloco de notas \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Assunto\",\n        className: \"input\",\n        type: \"text\",\n        onChange: e => setNote({ ...note,\n          subject: e.target.value\n        }),\n        value: note.subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Texto\",\n        rows: 10,\n        className: \"textArea\",\n        onChange: e => setNote({ ...note,\n          text: e.target.value\n        }),\n        value: note.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        className: \"btn\",\n        children: \"CRIAR NOTA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#93469c'\n        },\n        children: \" Suas notas \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-notes\",\n        children: notes.length > 0 ? notes === null || notes === void 0 ? void 0 : notes.map(({\n          _id,\n          subject,\n          text\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"color-primary\",\n              children: subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-delete\",\n              onClick: () => onDestroy(_id),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-dashed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"color-primary\",\n              children: \"No momento n\\xE3o h\\xE1 cart\\xF5es para listar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dP7910APN/N1kfv+kz4ToVop+mc=\", false, function () {\n  return [useAxios];\n});\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/luizfmd/√Årea de Trabalho/bloco-notas/client/src/App.tsx"],"names":["React","useAxios","App","axios","initialState","_id","subject","text","notes","setNotes","useState","note","setNote","onSubmit","post","onDestroy","delete","filter","item","useEffect","get","then","res","data","color","e","target","value","length","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useAxios } from './hooks/useAxios';\nimport './App.css';\n\ninterface Note {\n  _id: number;\n  subject: string;\n  text: string;\n};\n\nexport default function App() {\n  const { axios } = useAxios();\n  const initialState = { _id: 0, subject: '', text: '' };\n  const [notes, setNotes] = React.useState<Array<Note>>([]);\n  const [note, setNote] = React.useState<Note>(initialState);\n  \n\n  /**\n   * Envia dados para o backend\n   */\n  const onSubmit = async () => { \n    await axios.post('/notas/criar', { note }); \n    setNote(initialState);\n  };\n\n  /**\n   * Exclui uma nota\n   */\n  const onDestroy = async (_id: number) => {\n    await axios.delete(`/notas/excluir/${_id}`);\n\n    setNotes(\n      notes?.filter((item: Note) => item._id !== _id)\n    );\n  };\n\n  React.useEffect(() => {\n    (async () => (\n      await axios.get('/notas').then((res) => setNotes(res.data.notes))\n    ))();\n  }, [axios])\n\n  return (\n    <div className=\"container\">\n      <div className=\"form\">\n        <h1 style={{ color: '#93469c' }}> Bloco de notas </h1>\n        <input \n          placeholder=\"Assunto\" \n          className=\"input\" \n          type=\"text\" \n          onChange={(e) => setNote({ ...note, subject: e.target.value })}\n          value={note.subject}\n        />\n        <textarea \n          placeholder=\"Texto\" \n          rows={10} \n          className=\"textArea\"\n          onChange={(e) => setNote({ ...note, text: e.target.value })}\n          value={note.text}\n        ></textarea>\n        <button onClick={onSubmit} className=\"btn\">CRIAR NOTA</button>\n      </div>\n      <div className=\"notes\">\n        <h1 style={{ color: '#93469c' }}> Suas notas </h1>\n        <div className=\"card-notes\">\n          {notes.length > 0 ? (\n            notes?.map(({ _id, subject, text }: Note) => (\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <label className=\"color-primary\">{subject}</label>\n                  <div \n                    className=\"card-delete\" \n                    onClick={() => onDestroy(_id)}\n                  >&times;</div>\n                </div>\n                <hr className=\"border-dashed\" />\n                <div className=\"card-body\">{text}</div>\n              </div>\n            ))\n          ) : (\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <label className=\"color-primary\">No momento n√£o h√° cart√µes para listar.</label>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}